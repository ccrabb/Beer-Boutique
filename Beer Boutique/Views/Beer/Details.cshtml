@using System.Configuration
@using BeerBoutique
@using Newtonsoft.Json
@using Yeast
@using Yeast.Constants
@model Models.ViewModels.BeerViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script id="beerDetail" type="text/html">
    <div class="details-header">
        <div class="header-container">
            <h5 data-bind="text: name"></h5>
            <div class="rateit" id="rateDiv" data-bind="attr: { 'data-rateit-value': overall }"></div>
            <div class="details-meta">
                <strong><a data-bind="attr: { href: '@Url.Action("Details", "Brewery")/' + breweryId() }, text: brewery"></a></strong>
                <br />
                <i><span data-bind="text: location"></span></i>
            </div>

            <div>
                @if (User.Identity.IsAuthenticated)
                {
                    <a data-bind="attr: { href: '@Url.Action("_Review", "Review")?beerId=' + id() }" data-toggle="modal" type="button" class="btn btn-danger" data-target="#review_modal">Review</a>
                }
                @if (User.IsInRole("Geek"))
                {
                    <a class="btn btn-warning" onclick="window.viewModel.edit(true);">Edit</a>
                }
            </div>
        </div>
    </div>
    <div class="details-content">
        <ul>
            <li><span data-bind="text: style" /></li>
            <li><span data-bind="text: abv" />% ABV</li>
            <li><span data-bind="text: ibu" /> IBU</li>
            <li><span data-bind="text: srm" /> SRM</li>
        </ul>
        <span data-bind="text: description" />
    </div>
</script>
<script id="beerEdit" type="text/html">
    <div class="details-header">
        <div class="header-container">
            <input type="text" class="h5" data-bind="value: name" style="width:450px;" />
            <div class="rateit" data-bind="attr: { 'data-rateit-value': overall }"></div>
            <div class="details-meta">
                <strong><a data-bind="attr: { href: '@Url.Action("Details", "Brewery")/' + breweryId() }, text: brewery"></a></strong>
                <br />
                <i><span data-bind="text: location"></span></i>
            </div>

            <div>
                @if (User.Identity.IsAuthenticated)
                {
                    <a data-bind="attr: { href: '@Url.Action("_Review", "Review")?beerId=' + id() }" data-toggle="modal" type="button" class="btn btn-danger" data-target="#review_modal">Review</a>
                }
                @if (User.IsInRole("Geek"))
                {
                    <a class="btn btn-success" data-bind="click: save, clickBubble: false">Save</a>
                }
            </div>

        </div>
    </div>
    <div class="details-content">
        <ul>
            <li style="margin-bottom:5px;"><select data-bind="options: allStyles, optionsValue: 'id', optionsText: 'text', value: styleId" id="styleSelect" style="width:450px;"></select></li>
            <li>
                <input type="text" data-bind="value: abv" class="beerProperty" />% ABV</li>
            <li>
                <input type="text" data-bind="value: ibu" class="beerProperty" />
                IBU</li>
            <li>
                <input type="text" data-bind="value: srm" class="beerProperty" />
                SRM</li>
        </ul>
        <textarea data-bind="value: description" style="width:450px; height:200px;"></textarea>
    </div>
</script>

<script type="text/javascript">

    function BeerImage(instagramUrl, active, instagramText, link) {
        var self = this;
        self.url = instagramUrl;
        self.isActive = active;
        self.text = instagramText;
        self.link = link;
    }

    function BeerViewModel() {
        var self = this;
        self.id = ko.observable('@Model.ID');
        self.edit = ko.observable(false);
        self.allStyles = ko.observableArray(@Html.Raw(Helpers.ToJSON(Helpers.GetDictionary<BeerStyle>())));

        self.name = ko.observable('@Html.Raw(Model.Name)');
        self.styleId = ko.observable('@Model.StyleID');

        self.styleId.subscribe(function (newValue) {
            $.each(self.allStyles(), function(key, value) {
                if (value.id === newValue) {
                    self.style(value.text);
                }
            });
        }, this);

        self.style = ko.observable('@Model.Style');
        self.abv = ko.observable('@Model.ABV');
        self.ibu = ko.observable('@Model.IBU');
        self.srm = ko.observable('@Model.SRM');
        self.description = ko.observable("@Html.Raw(Model.Description)");

        self.location = ko.observable('@Html.Raw(Model.Location)');
        self.brewery = ko.observable('@Html.Raw(Model.Brewery)');
        self.breweryId = ko.observable('@Model.BreweryID');
        self.overall = ko.observable('@(Model.Overall / 2)');

        self.templateToUse = function () {
            return self.edit() ? "beerEdit" : "beerDetail";
        };

        self.initialized = function () {
            $(".rateit").rateit();

            $('.rateit').bind('rated', function (event, value) {
                var beerId = $("#hiddenID").val();
                $.ajax({
                    url: '@Url.Action("Rate", "Rating")',
                    data: { beerId: beerId, score: value },
                    type: 'POST',
                    statusCode: {
                        404: function () {
                            window.bootstrap_alert.error('@Html.Raw(Alerts.ALERT_UNAUTHORIZED)');
                        }
                    },
                    success: function (data) {
                        window.bootstrap_alert.success('@Html.Raw(Alerts.SUCCESS_RATING)');
                    },
                    error: function (jxhr, msg, err) {
                        window.bootstrap_alert.error('@Html.Raw(Alerts.ALERT_ERROR)');
                    }
                });
            });

            $("#styleSelect").select2();
        };

        self.beerImages = ko.observableArray([]);

        self.addImage = function (instagramUrl, active, instagramText, link) {
            self.beerImages.push(new BeerImage(instagramUrl, active, instagramText, link));
        };

        var url = '@Html.Raw(String.Format("https://api.instagram.com/v1/tags/{0}/media/recent?client_id={1}&count=5&callback=?", Model.TagName, ConfigurationManager.AppSettings["InstagramClientID"]))';
        $.ajax({
            type: "GET",
            url: url,
            dataType: "json",
            success: function (data) {
                $.each(data.data, function (i, item) {
                    self.addImage(item.images.low_resolution.url, i === 0, item.caption.text, item.link);
                });

                $('.carousel').css("visibility", "visible");
            }
        });

        self.save = function () {
            if (!window.saving) {
                window.saving = true;
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Edit", "Beer")',
                    data: this,
                    success: function(data) {
                        window.viewModel.edit(false);
                        window.saving = false;
                        window.bootstrap_alert.success('@Html.Raw(Alerts.SUCCESS_BEER_EDIT)');
                    },
                    error: function (jxhr, msg, err) {
                        window.saving = false;
                        window.bootstrap_alert.error('@Html.Raw(Alerts.ALERT_ERROR)');
                    }
                });
            }
        };
    }
</script>

<section>
    <div class="container">
        <div class="details">
            <div class="row">
                <div class="span7" data-bind="template: {name: templateToUse, afterRender: initialized}">
                </div>
                <div class="span4">
                    <div id="myCarousel" class="carousel" style="visibility: hidden; height:400px;">
                        <ol class="carousel-indicators">
                            <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
                            <li data-target="#myCarousel" data-slide-to="1"></li>
                            <li data-target="#myCarousel" data-slide-to="2"></li>
                            <li data-target="#myCarousel" data-slide-to="3"></li>
                            <li data-target="#myCarousel" data-slide-to="4"></li>
                        </ol>
                        <!-- Carousel items -->
                        <div class="carousel-inner">
                            <div data-bind="foreach: beerImages">
                                <div class="item" data-bind="css: { active : isActive }">
                                    <img data-bind="attr: {src: url, alt: text }" />
                                    <div class="carousel-caption">
                                        <p><a data-bind="attr: { href: link }" target="_new"><span data-bind="text: text"></span></a></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Carousel nav -->
                        <a class="carousel-control left" href="#myCarousel" data-slide="prev">&lsaquo;</a>
                        <a class="carousel-control right" href="#myCarousel" data-slide="next">&rsaquo;</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<section>
    <div class="container">
        <div style="text-align: center;">
            <h2>Similar Beers</h2>
        </div>
    </div>
    @if (Model.SimilarBeers.Any()) {
        <div class="container">
            <div class="row-fluid">
                <div class="span4">
                    @{ Html.RenderPartial("_Summary", Model.SimilarBeers[0]); }
                </div>
                @if (Model.SimilarBeers.Count() > 1) {
                    <div class="span4">
                        @{ Html.RenderPartial("_Summary", Model.SimilarBeers[1]); }
                    </div>
                }
                @if (Model.SimilarBeers.Count() > 2) {
                    <div class="span4">
                        @{ Html.RenderPartial("_Summary", Model.SimilarBeers[2]); }
                    </div>
                }
            </div>
        </div>
    }
</section>
<section>
    <div class="container">
        <div style="text-align: center;">
            <h2>Reviews</h2>
        </div>
    </div>
    <div class="container">
        @{ Html.RenderAction("_Reviews", "Review", new { beerId = Model.ID }); }
    </div>
</section>

<div class="modal hide fade" id="review_modal">
    <div class="modal-header">
        <a class="close" data-dismiss="modal">&times;</a>
        <h3>Review - @Model.Name</h3>
    </div>
    <div class="modal-body">
        <p>Loading...</p>
    </div>
    <div class="modal-footer">
        <a href="#" class="btn" data-dismiss="modal">Close</a>
        <a href="#" class="btn btn-primary" id="saveReview">Save Changes</a>
    </div>
</div>

@Html.HiddenFor(x => x.ID, new { id = "hiddenID" })
<script type="text/javascript">
    $(document).ready(function () {

        $('.carousel').carousel();
        window.viewModel = new BeerViewModel();
        ko.applyBindings(viewModel);

        $("#saveReview").bind("click", function (event, value) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("_Review", "Review")",
                data: $("#reviewForm").serialize(),
                success: function (data) {
                    $("#review_modal").modal("hide");
                    window.bootstrap_alert.success('@Html.Raw(Alerts.SUCCESS_REVIEW)');
                },
                error: function (jxhr, msg, err) {
                    alert('There was a problem saving your review. Please try again later.');
                }
            });
        });
    });
</script>

@section Scripts {
    @Scripts.Render(BundleConfig.SCRIPT_KNOCKOUTJS)
    @Scripts.Render(BundleConfig.SCRIPT_SELECT2)
}

@section Styles{
    @Styles.Render(BundleConfig.STYLE_SELECT2)
}

